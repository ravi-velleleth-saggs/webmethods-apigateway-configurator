---

################################################################
## Load the needed vars
################################################################

- name: Load vars
  hosts: local
  tasks:
    - name: Include all vars files
      include_vars:
        file: "{{ item }}"
      with_fileglob:
        - vars/common.yaml
        - vars/rest_connect.yaml
        - vars/data_apis.yaml

################################################################
## set configs via REST APIs
################################################################

- hosts: local
  become: true
  become_user: "{{ webmethods_user }}"
  run_once: true
  vars:
    apigateway_rest_protocol: "{{ vars_apigw_rest_protocol }}"
    apigateway_rest_host: "{{ vars_apigw_rest_host }}"
    apigateway_rest_port: "{{ vars_apigw_rest_port }}"
    apigateway_rest_no_check_certs: "{{ vars_apigw_rest_no_check_certs }}"
    apigateway_rest_login_username: "{{ vars_apigw_rest_login_username }}"
    apigateway_rest_login_password: "{{ vars_apigw_rest_login_password }}"
    teststring: "API PortalGateway Config:1.0:DEV"
    _attr_regex: "^([^:]+):([^:]+):([^:]+)$"

  tasks:

    - name: set initial list so it's not undefined
      set_fact:
        test1: "{{ teststring | regex_search( _attr_regex, '\\1') }}"
        test2: "{{ teststring | regex_search( _attr_regex, '\\2') }}"
        test3: "{{ teststring | regex_search( _attr_regex, '\\3') }}"
   
    - ansible.builtin.debug:
        var: test1
    - ansible.builtin.debug:
        var: test2
    - ansible.builtin.debug:
        var: test3
    # - name: get the count of items from the env vars
    #   set_fact:
    #     _index_items: "{{ ansible_env.keys() | map('regex_search','^' + _apigw_apis_indices_finder_prefix + '(.+)' + _apigw_apis_indices_finder_suffix + '$', '\\1') | flatten | select('string') | unique | sort }}"
    
    # - ansible.builtin.debug:
    #     var: _index_items

    # - name: set initial list so it's not undefined
    #   set_fact:
    #      _publish_apis_list: []

    # - name: append each item to list
    #   include_tasks: "publish_apis_append_each.yaml"
    #   loop: "{{ _index_items }}"
    #   loop_control:
    #     loop_var: index_item

    # - ansible.builtin.debug:
    #     var: _publish_apis_list

    # - include_role:
    #     name: apigateway-rest-configurator
    #     apply:
    #       ignore_errors: "{{ vars_apigw_apis_publish_groups_ignore_errors }}"
    #   vars:
    #     configs_action: publish-apis-groups
    #     configs_enabled: "{{ vars_apigw_apis_publish_groups_enabled }}"
    #     rvar_apigateway_apis_publish_groups: "{{ _publish_apis_list }}"
