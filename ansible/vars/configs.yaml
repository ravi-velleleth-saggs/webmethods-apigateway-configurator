---
## Environment variables supported:
# env_apigateway_protocol
# env_apigateway_host
# env_apigateway_port
# env_apigateway_rest_user
# env_apigateway_rest_password
# env_apigateway_rest_password_old
# env_apigateway_lb_http_url
# env_apigateway_lb_http_url_alt1
# env_apigateway_lb_http_url_alt2
# env_apigateway_lb_http_url_alt3
# env_apigateway_lb_https_url
# env_apigateway_lb_https_url_alt1
# env_apigateway_lb_https_url_alt2
# env_apigateway_lb_https_url_alt3
# env_apigateway_lb_websocket_url
# env_apigateway_lb_websocket_url_alt1
# env_apigateway_lb_websocket_url_alt2
# env_apigateway_lb_websocket_url_alt3
# env_apigateway_lb_webapp_url
# env_apigateway_stage
# env_apigateway_portalgateway_gateway_url
# env_apigateway_portalgateway_gateway_username
# env_apigateway_portalgateway_gateway_password
# env_apigateway_portalgateway_portaltype
# env_apigateway_portalgateway_apiportal_url
# env_apigateway_portalgateway_apiportal_tenant
# env_apigateway_portalgateway_apiportal_username
# env_apigateway_portalgateway_apiportal_password
# env_apigateway_portalgateway_devportal_url
# env_apigateway_portalgateway_devportal_tenant
# env_apigateway_portalgateway_devportal_username
# env_apigateway_portalgateway_devportal_password
# env_apigateway_configure_usermgt
# env_apigateway_configure_portalgateway
# env_apigateway_configure_archives
# env_apigateway_configure_aliases
# env_apigateway_configure_ports
# env_apigateway_configure_ldap
# env_apigateway_configure_saml
# env_apigateway_configure_lb
# env_apigateway_configure_promotions_stages
# env_apigateway_configure_extended_settings

# enable / disable the config items
vars_webmethods_apigateway_usermgt_enabled: "{{ lookup('env', 'env_apigateway_configure_usermgt') | default('false',true) }}"
vars_webmethods_apigateway_portalgateway_enabled: "{{ lookup('env', 'env_apigateway_configure_portalgateway') | default('false',true) }}"
vars_webmethods_apigateway_archive_imports_enabled: "{{ lookup('env', 'env_apigateway_configure_archives') | default('false',true) }}"
vars_webmethods_apigateway_aliases_enabled: "{{ lookup('env', 'env_apigateway_configure_aliases') | default('false',true) }}"
vars_webmethods_apigateway_ports_enabled: "{{ lookup('env', 'env_apigateway_configure_ports') | default('false',true) }}"
vars_webmethods_apigateway_ldap_enabled: "{{ lookup('env', 'env_apigateway_configure_ldap') | default('false',true) }}"
vars_webmethods_apigateway_saml_enabled: "{{ lookup('env', 'env_apigateway_configure_saml') | default('false',true) }}"
vars_webmethods_apigateway_loadbalancer_enabled: "{{ lookup('env', 'env_apigateway_configure_lb') | default('false',true) }}"
vars_webmethods_apigateway_promotions_stages_enabled: "{{ lookup('env', 'env_apigateway_configure_promotions_stages') | default('false',true) }}"
vars_webmethods_apigateway_extended_settings_enabled: "{{ lookup('env', 'env_apigateway_configure_extended_settings') | default('false',true) }}"
vars_webmethods_apigateway_plans_enabled: "{{ lookup('env', 'env_apigateway_configure_plans') | default('false',true) }}"
vars_webmethods_apigateway_packages_enabled: "{{ lookup('env', 'env_apigateway_configure_packages') | default('false',true) }}"
vars_webmethods_apigateway_applications_enabled: "{{ lookup('env', 'env_apigateway_configure_applications') | default('false',true) }}"
vars_webmethods_apigateway_apis_publish_groups_enabled: "{{ lookup('env', 'env_apigateway_configure_apis_publish_groups') | default('false',true) }}"
vars_webmethods_apigateway_packages_publish_groups_enabled: "{{ lookup('env', 'env_apigateway_configure_packages_publish_groups') | default('false',true) }}"

# ignore errors or not for each of the config items (defaults to vars_webmethods_apigateway_default_ignore_errors)
vars_webmethods_apigateway_usermgt_ignore_errors: "{{ lookup('env', 'env_apigateway_configure_usermgt_ignore_errors') | default(vars_webmethods_apigateway_default_ignore_errors,true) }}"
vars_webmethods_apigateway_portalgateway_ignore_errors: "{{ lookup('env', 'env_apigateway_configure_portalgateway_ignore_errors') | default(vars_webmethods_apigateway_default_ignore_errors,true) }}"
vars_webmethods_apigateway_archive_imports_ignore_errors: "{{ lookup('env', 'env_apigateway_configure_archives_ignore_errors') | default(vars_webmethods_apigateway_default_ignore_errors,true) }}"
vars_webmethods_apigateway_aliases_ignore_errors: "{{ lookup('env', 'env_apigateway_configure_aliases_ignore_errors') | default(vars_webmethods_apigateway_default_ignore_errors,true) }}"
vars_webmethods_apigateway_ports_ignore_errors: "{{ lookup('env', 'env_apigateway_configure_ports_ignore_errors') | default(vars_webmethods_apigateway_default_ignore_errors,true) }}"
vars_webmethods_apigateway_ldap_ignore_errors: "{{ lookup('env', 'env_apigateway_configure_ldap_ignore_errors') | default(vars_webmethods_apigateway_default_ignore_errors,true) }}"
vars_webmethods_apigateway_saml_ignore_errors: "{{ lookup('env', 'env_apigateway_configure_saml_ignore_errors') | default(vars_webmethods_apigateway_default_ignore_errors,true) }}"
vars_webmethods_apigateway_loadbalancer_ignore_errors: "{{ lookup('env', 'env_apigateway_configure_lb_ignore_errors') | default(vars_webmethods_apigateway_default_ignore_errors,true) }}"
vars_webmethods_apigateway_promotions_stages_ignore_errors: "{{ lookup('env', 'env_apigateway_configure_promotions_stages_ignore_errors') | default(vars_webmethods_apigateway_default_ignore_errors,true) }}"
vars_webmethods_apigateway_extended_settings_ignore_errors: "{{ lookup('env', 'env_apigateway_configure_extended_settings_ignore_errors') | default(vars_webmethods_apigateway_default_ignore_errors,true) }}"
vars_webmethods_apigateway_plans_ignore_errors: "{{ lookup('env', 'env_apigateway_configure_plans_ignore_errors') | default(vars_webmethods_apigateway_default_ignore_errors,true) }}"
vars_webmethods_apigateway_packages_ignore_errors: "{{ lookup('env', 'env_apigateway_configure_packages_ignore_errors') | default(vars_webmethods_apigateway_default_ignore_errors,true) }}"
vars_webmethods_apigateway_applications_ignore_errors: "{{ lookup('env', 'env_apigateway_configure_applications_ignore_errors') | default(vars_webmethods_apigateway_default_ignore_errors,true) }}"
vars_webmethods_apigateway_apis_publish_groups_ignore_errors: "{{ lookup('env', 'env_apigateway_configure_apis_publish_groups_ignore_errors') | default(vars_webmethods_apigateway_default_ignore_errors,true) }}"
vars_webmethods_apigateway_packages_publish_groups_ignore_errors: "{{ lookup('env', 'env_apigateway_configure_packages_publish_groups_ignore_errors') | default(vars_webmethods_apigateway_default_ignore_errors,true) }}"

# the env stage (ie. dev, test, staging, prod)
vars_apigateway_environment_stage: "{{ lookup('env', 'env_apigateway_stage') | default('dev',true) }}"

## api packages to import into gateway
vars_webmethods_apigateway_archive_imports_from_s3:
  - bucket_path: "demo_repo/apigateway_archives/{{ webmethods_version }}/apigw{{ webmethods_version_nodot }}-archive-uszip-1.0.zip"
    local_path: "{{ webmethods_install_dir }}/install_artifacts/apigw{{ webmethods_version_nodot }}-archive-uszip-1.0.zip"
    overwrite: "apis,policies,policyactions"
    fixingMissingVersions: "true"
    preserveAssetState: "true"
  - bucket_path: "demo_repo/apigateway_archives/{{ webmethods_version }}/apigw{{ webmethods_version_nodot }}-archive-bookstore-1.0.zip"
    local_path: "{{ webmethods_install_dir }}/install_artifacts/apigw{{ webmethods_version_nodot }}-archive-bookstore-1.0.zip"
    overwrite: "apis,policies,policyactions"
    fixingMissingVersions: "true"
    preserveAssetState: "true"
  - bucket_path: "demo_repo/apigateway_archives/{{ webmethods_version }}/apigw{{ webmethods_version_nodot }}-archive-covid-1.0.zip"
    local_path: "{{ webmethods_install_dir }}/install_artifacts/apigw{{ webmethods_version_nodot }}-archive-covid-1.0.zip"
    overwrite: "apis,policies,policyactions"
    fixingMissingVersions: "true"
    preserveAssetState: "true"
  - bucket_path: "demo_repo/apigateway_archives/{{ webmethods_version }}/apigw{{ webmethods_version_nodot }}-archive-SAGTours-1.0.zip"
    local_path: "{{ webmethods_install_dir }}/install_artifacts/apigw{{ webmethods_version_nodot }}-archive-SAGTours-1.0.zip"
    overwrite: "apis,policies,policyactions"
    fixingMissingVersions: "true"
    preserveAssetState: "true"
  - bucket_path: "demo_repo/apigateway_archives/{{ webmethods_version }}/global_policies/Transaction_logging.zip"
    local_path: "{{ webmethods_install_dir }}/install_artifacts/Transaction_logging.zip"
    overwrite: "*"
    fixingMissingVersions: "true"
    preserveAssetState: "true"
  - bucket_path: "demo_repo/apigateway_archives/{{ webmethods_version }}/global_policies/Enforce_Protected_APIs_via_multiple_protocols.zip"
    local_path: "{{ webmethods_install_dir }}/install_artifacts/Enforce_Protected_APIs_via_multiple_protocols.zip"
    overwrite: "*"
    fixingMissingVersions: "true"
    preserveAssetState: "true"
  - bucket_path: "demo_repo/apigateway_archives/{{ webmethods_version }}/global_policies/apigw{{ webmethods_version_nodot }}_Enforce_HTTPS_REST.zip"
    local_path: "{{ webmethods_install_dir }}/install_artifacts/apigw{{ webmethods_version_nodot }}_Enforce_HTTPS_REST.zip"
    overwrite: "*"
    fixingMissingVersions: "true"
    preserveAssetState: "true"
  - bucket_path: "demo_repo/apigateway_archives/{{ webmethods_version }}/global_policies/apigw{{ webmethods_version_nodot }}_Enforce_HTTPS_SOAP.zip"
    local_path: "{{ webmethods_install_dir }}/install_artifacts/apigw{{ webmethods_version_nodot }}_Enforce_HTTPS_SOAP.zip"
    overwrite: "*"
    fixingMissingVersions: "true"
    preserveAssetState: "true"

vars_webmethods_apigateway_aliases:
  - name: covid_endpoint
    description: covid endpoint alias
    type: simple
    owner: Administrator
    value: "{{ lookup('env', 'env_apigateway_aliases_covid_endpoint') | default('',true) }}"
    stage: ""
  - name: bookstore_endpoint
    description: bookstore endpoint alias
    type: simple
    owner: Administrator
    value: "{{ lookup('env', 'env_apigateway_aliases_bookstore_endpoint') | default('',true) }}"
    stage: ""
  - name: uszip_endpoint
    description: uszip endpoint alias
    type: simple
    owner: Administrator
    value: "{{ lookup('env', 'env_apigateway_aliases_uszip_endpoint') | default('',true) }}"
    stage: ""
  - name: SAGTours_endpoint
    description: SAGTours API endpoint alias
    type: simple
    owner: Administrator
    value: "{{ lookup('env', 'env_apigateway_aliases_sagtours_endpoint') | default('',true) }}"
    stage: ""

## local users
vars_webmethods_apigateway_usermgt_users_loadrunner_username: "{{ lookup('env', 'env_apigateway_users_loadrunner_username') | default('loadrunner',true) }}"
vars_webmethods_apigateway_usermgt_users_loadrunner_password: "{{ lookup('env', 'env_apigateway_users_loadrunner_password') | default('changeme',true) }}"

vars_webmethods_apigateway_usermgt_users_sample1_username: "sampleuser1.apiadmin"
vars_webmethods_apigateway_usermgt_users_sample1_password: "{{ lookup('env', 'env_apigateway_users_sample1_password') | default('changeme',true) }}"

vars_webmethods_apigateway_usermgt_users_sample2_username: "sampleuser2.apiprovider"
vars_webmethods_apigateway_usermgt_users_sample2_password: "{{ lookup('env', 'env_apigateway_users_sample2_password') | default('changeme',true) }}"

vars_webmethods_apigateway_usermgt_users_sample3_username: "sampleuser3.apiuser"
vars_webmethods_apigateway_usermgt_users_sample3_password: "{{ lookup('env', 'env_apigateway_users_sample3_password') | default('changeme',true) }}"

vars_webmethods_apigateway_usermgt_users:
  - loginId: "{{ vars_webmethods_apigateway_usermgt_users_loadrunner_username }}"
    firstName: Load runner
    lastName: Load runner
    password: "{{ vars_webmethods_apigateway_usermgt_users_loadrunner_password }}"
    emailAddresses:
      - "{{ vars_webmethods_apigateway_usermgt_users_loadrunner_username }}@local.com"
    allowDigestAuth: false
    active: true
    language: en
  - loginId: "{{ vars_webmethods_apigateway_usermgt_users_sample1_username }}"
    firstName: Sample User1
    lastName: Api Admin
    password: "{{ vars_webmethods_apigateway_usermgt_users_sample1_password }}"
    emailAddresses:
      - "{{ vars_webmethods_apigateway_usermgt_users_sample1_username }}@sample.com"
    allowDigestAuth: false
    active: true
    language: en
  - loginId: "{{ vars_webmethods_apigateway_usermgt_users_sample2_username }}"
    firstName: Sample User2
    lastName: Api Provider
    password: "{{ vars_webmethods_apigateway_usermgt_users_sample2_password }}"
    emailAddresses:
      - "{{ vars_webmethods_apigateway_usermgt_users_sample2_username }}@sample.com"
    allowDigestAuth: false
    active: true
    language: en
  - loginId: "{{ vars_webmethods_apigateway_usermgt_users_sample3_username }}"
    firstName: Sample User3
    lastName: Api User
    password: "{{ vars_webmethods_apigateway_usermgt_users_sample3_password }}"
    emailAddresses:
      - "{{ vars_webmethods_apigateway_usermgt_users_sample3_username }}@sample.com"
    allowDigestAuth: false
    active: true
    language: en

## local user groups
vars_webmethods_apigateway_usermgt_groups:
  - name: sample-apigateway-admins
    description: apigateway-admins
    empty_user_ids: false
    user_loginids_add:
      - "{{ vars_webmethods_apigateway_usermgt_users_sample1_username }}"
  - name: sample-apigateway-providers
    description: apigateway-providers
    empty_user_ids: false
    user_loginids_add:
      - "{{ vars_webmethods_apigateway_usermgt_users_sample2_username }}"
  - name: sample-apigateway-users
    description: apigateway-users
    empty_user_ids: false
    user_loginids_add:
      - "{{ vars_webmethods_apigateway_usermgt_users_sample3_username }}"
      - "{{ vars_webmethods_apigateway_usermgt_users_loadrunner_username }}"

## access profiles (note: the group names / user names will get replaced by their IDs in the real REST request, and merged with the userIds/groupIds fields)
vars_webmethods_apigateway_usermgt_accessprofiles:
  - name: sample-apigateway-users-team
    description: apigateway-users-team description
    privilege: "10010010010100000001010001"
    groupnames:
      - sample-apigateway-users
    groupIds: []
    teamAdmin:
      usernames: []
      groupnames: []
  - name: sample-apigateway-providers-team
    description: apigateway-providers-team description
    privilege: "111111111111111111111111100"
    groupnames:
      - sample-apigateway-providers
    groupIds: []
    teamAdmin:
      usernames: []
      groupnames: []
  - name: sample-apigateway-admins-team
    description: apigateway-admins-team description
    privilege: "111111111111111111111111111"
    groupnames:
      - sample-apigateway-admins
    groupIds: []
    teamAdmin:
      usernames: []
      groupnames: []

## apigateway custom port types
vars_webmethods_apigateway_ports_list: []

## load balancers
vars_webmethods_apigateway_loadbalancers_http_urls:
  - "{{ lookup('env', 'env_apigateway_lb_http_url') | default('',true) }}"
  - "{{ lookup('env', 'env_apigateway_lb_http_url_alt1') | default('',true) }}"
  - "{{ lookup('env', 'env_apigateway_lb_http_url_alt2') | default('',true) }}"
  - "{{ lookup('env', 'env_apigateway_lb_http_url_alt3') | default('',true) }}"
vars_webmethods_apigateway_loadbalancers_https_urls:
  - "{{ lookup('env', 'env_apigateway_lb_https_url') | default('',true) }}"
  - "{{ lookup('env', 'env_apigateway_lb_https_url_alt1') | default('',true) }}"
  - "{{ lookup('env', 'env_apigateway_lb_https_url_alt2') | default('',true) }}"
  - "{{ lookup('env', 'env_apigateway_lb_https_url_alt3') | default('',true) }}"
vars_webmethods_apigateway_loadbalancers_websocket_urls:
  - "{{ lookup('env', 'env_apigateway_lb_websocket_url') | default('',true) }}"
  - "{{ lookup('env', 'env_apigateway_lb_websocket_url_alt1') | default('',true) }}"
  - "{{ lookup('env', 'env_apigateway_lb_websocket_url_alt2') | default('',true) }}"
  - "{{ lookup('env', 'env_apigateway_lb_websocket_url_alt3') | default('',true) }}"
vars_webmethods_apigateway_loadbalancers_webapp_url: "{{ lookup('env', 'env_apigateway_lb_webapp_url') | default('',true) }}"

## extended settings - apigateway settings (note: this are replicated in the cluster)
vars_webmethods_apigateway_settings_extended: "{{ lookup('env', 'env_apigateway_settings_extended') | default('',true) }}"
vars_webmethods_apigateway_settings_watts: "{{ lookup('env', 'env_apigateway_settings_watts') | default('',true) }}"

## apiportal / devportal registration
## portal type should be: apiportal or devportal
vars_webmethods_apigateway_portalgateway_portaltype: "{{ lookup('env', 'env_apigateway_portalgateway_portaltype') | default('',true) }}"
vars_webmethods_apigateway_portalgateway_apiportal:
  gatewayName: "API_Gateway_{{ vars_apigateway_environment_stage }}"
  gatewayDescription: "API Gateway in {{ vars_apigateway_environment_stage }} environment"
  gatewayUsername: "{{ lookup('env', 'env_apigateway_portalgateway_gateway_username') | default('',true) }}"
  gatewayPassword: "{{ lookup('env', 'env_apigateway_portalgateway_gateway_password') | default('',true) }}"
  gatewayURL: "{{ lookup('env', 'env_apigateway_portalgateway_gateway_url') | default('',true) }}"
  version: "1.0"
  stageName: "{{ vars_apigateway_environment_stage }}"
  published: true
  externalPortal:
    endpointTenant: "{{ lookup('env', 'env_apigateway_portalgateway_apiportal_tenant') | default('default',true) }}"
    endpointURL: "{{ lookup('env', 'env_apigateway_portalgateway_apiportal_url') | default('',true) }}"
    endpointUsername: "{{ lookup('env', 'env_apigateway_portalgateway_apiportal_username') | default('',true) }}"
    endpointPassword: "{{ lookup('env', 'env_apigateway_portalgateway_apiportal_password') | default('',true) }}"
    type: "apiportal"
vars_webmethods_apigateway_portalgateway_devportal:
  gatewayName: "API_Gateway_{{ vars_apigateway_environment_stage }}"
  gatewayDescription: "API Gateway in {{ vars_apigateway_environment_stage }} environment"
  gatewayUsername: "{{ lookup('env', 'env_apigateway_portalgateway_gateway_username') | default('',true) }}"
  gatewayPassword: "{{ lookup('env', 'env_apigateway_portalgateway_gateway_password') | default('',true) }}"
  gatewayURL: "{{ lookup('env', 'env_apigateway_portalgateway_gateway_url') | default('',true) }}"
  version: "1.0"
  stageName: "{{ vars_apigateway_environment_stage }}"
  published: true
  externalPortal:
    endpointTenant: "{{ lookup('env', 'env_apigateway_portalgateway_devportal_tenant') | default('default',true) }}"
    endpointURL: "{{ lookup('env', 'env_apigateway_portalgateway_devportal_url') | default('',true) }}"
    endpointUsername: "{{ lookup('env', 'env_apigateway_portalgateway_devportal_username') | default('',true) }}"
    endpointPassword: "{{ lookup('env', 'env_apigateway_portalgateway_devportal_password') | default('',true) }}"
    type: "apiportal"

## api gateway promotion stages
vars_webmethods_apigateway_promotions_stages:
  # - name: "{{ vars_apigateway_environment_stage }}"
  #   description: "{{ vars_apigateway_environment_stage }} Stage"
  #   url: "https://apigateway105-irsrepro.clouddemo.saggov.com"
  #   username: "{{ webmethods_secrets_promotionsmgt_user }}"
  #   password: "{{ webmethods_secrets_promotionsmgt_password }}"
  #   keystoreAlias: "{{ webmethods_apigateway_keystore_name }}"
  #   keyAlias: "{{ webmethods_apigateway_keystore_keyalias }}"

## api gateway connectivity to ldap
vars_webmethods_apigateway_ldap_settings: {}

## api gateway saml settings
vars_webmethods_apigateway_saml_settings: {}

# api packages to add or update
# the following attributes with "custom_" will be transformed to corresponding attributes of internal ids:
# - custom_apiIdsByFilter --> apiIds
# - custom_planIdsByFilter --> planIds
# - custom_policyIdsByFilter --> policyIds
vars_webmethods_apigateway_packages:
  - name: Swag Pack Complete
    version: "1.0"
    deprecated: false
    custom_apiIdsByFilter:
      - name: "bookstore"
        version: "1.0"
      - name: "uszip"
        version: "1.0"
      - name: "covid"
        version: "1.0"
      - name: "SAGTours"
        version: "1.0"
    custom_planIdsByFilter:
      - name: "gold"
        version: "1.0"
      - name: "silver"
        version: "1.0"
      - name: "bronze"
        version: "1.0"
    publishedPortals: []
    custom_policyIdsByFilter: []
    active: true
  - name: Swag Pack Bookstore
    version: "1.0"
    deprecated: false
    custom_apiIdsByFilter:
      - name: "bookstore"
        version: "1.0"
    custom_planIdsByFilter:
      - name: "gold"
        version: "1.0"
      - name: "silver"
        version: "1.0"
      - name: "bronze"
        version: "1.0"
    publishedPortals: []
    custom_policyIdsByFilter: []
    active: true
  - name: Swag Pack UsZip
    version: "1.0"
    deprecated: false
    custom_apiIdsByFilter:
      - name: "uszip"
        version: "1.0"
    custom_planIdsByFilter:
      - name: "gold"
        version: "1.0"
      - name: "silver"
        version: "1.0"
      - name: "bronze"
        version: "1.0"
    publishedPortals: []
    custom_policyIdsByFilter: []
    active: true
  - name: Swag Pack CovidReports
    version: "1.0"
    deprecated: false
    custom_apiIdsByFilter:
      - name: "covid"
        version: "1.0"
    custom_planIdsByFilter:
      - name: "gold"
        version: "1.0"
      - name: "silver"
        version: "1.0"
      - name: "bronze"
        version: "1.0"
    publishedPortals: []
    custom_policyIdsByFilter: []
    active: true

vars_webmethods_apigateway_packages_update_final_status:
  - name: Swag Pack Complete
    version: "1.0"
    active: false
  - name: Swag Pack Bookstore
    version: "1.0"
    active: false
  - name: Swag Pack UsZip
    version: "1.0"
    active: false
  - name: Swag Pack CovidReports
    version: "1.0"
    active: false

# api plans to add or update
vars_webmethods_apigateway_plans:
  - name: gold
    version: "1.0"
    deprecated: false
    isProtected: false
    policiesNames: []
    cost:
      currency:
      value:
      duration:
    quota:
      enforcementPolicyName: ""
    protected: false
  - name: silver
    version: "1.0"
    deprecated: false
    isProtected: false
    policiesNames: []
    cost:
      currency:
      value:
      duration:
    quota:
      enforcementPolicyName: ""
    protected: false
  - name: bronze
    version: "1.0"
    deprecated: false
    isProtected: false
    policiesNames: []
    cost:
      currency:
      value:
      duration:
    quota:
      enforcementPolicyName: ""
    protected: false

# applications to add or update
# the following attributes with "names/version" will be transformed to corresponding attributes of internal ids:
# - custom_registerAPIsByFilter --> triggers the registration apis call
vars_webmethods_apigateway_applications:
  - name: Load-runner Internal Client Application
    description: The load runner app that perform api calls every few seconds to showcase the api statistics
    version: "1.0"
    custom_registerAPIsByFilter:
      - name: "bookstore"
        version: "1.0"
      - name: "uszip"
        version: "1.0"
      - name: "covid"
        version: "1.0"
    contactEmails: []
    siteURLs: []
    identifiers:
      - value:
          - "{{ vars_webmethods_apigateway_usermgt_users_loadrunner_username }}"
        name: Username
        key: httpBasicAuth
    consumingAPIs: []
    isSuspended: false
    jsOrigins: []
    authStrategyIds: []
    restrictViewAsset: false
    teams: []
  - name: Sample Bookstore Application
    description: Sample application needing access to the Bookstore APIs
    version: "1.0"
    custom_registerAPIsByFilter:
      - name: "bookstore"
        version: "1.0"
    contactEmails: []
    siteURLs: []
    identifiers:
      - value:
          - "{{ vars_webmethods_apigateway_usermgt_users_sample1_username }}"
        name: Username
        key: httpBasicAuth
      - value:
          - "{{ vars_webmethods_apigateway_usermgt_users_sample2_username }}"
        name: Username
        key: httpBasicAuth
      - value:
          - "{{ vars_webmethods_apigateway_usermgt_users_sample3_username }}"
        name: Username
        key: httpBasicAuth
    consumingAPIs: []
    isSuspended: false
    jsOrigins: []
    authStrategyIds: []
    restrictViewAsset: false
    teams: []
  - name: Sample UsZip Application
    description: Sample application needing access to the UsZip APIs
    version: "1.0"
    custom_registerAPIsByFilter:
      - name: "uszip"
        version: "1.0"
    contactEmails: []
    siteURLs: []
    identifiers:
      - value:
          - "{{ vars_webmethods_apigateway_usermgt_users_sample1_username }}"
        name: Username
        key: httpBasicAuth
      - value:
          - "{{ vars_webmethods_apigateway_usermgt_users_sample2_username }}"
        name: Username
        key: httpBasicAuth
      - value:
          - "{{ vars_webmethods_apigateway_usermgt_users_sample3_username }}"
        name: Username
        key: httpBasicAuth
    consumingAPIs: []
    isSuspended: false
    jsOrigins: []
    authStrategyIds: []
    restrictViewAsset: false
    teams: []
  - name: Sample Covid Report Application
    description: Sample Covid Report application needing access to the Covid Report APIs
    version: "1.0"
    custom_registerAPIsByFilter:
      - name: "covid"
        version: "1.0"
    contactEmails: []
    siteURLs: []
    identifiers:
      - value:
          - "{{ vars_webmethods_apigateway_usermgt_users_sample1_username }}"
        name: Username
        key: httpBasicAuth
      - value:
          - "{{ vars_webmethods_apigateway_usermgt_users_sample2_username }}"
        name: Username
        key: httpBasicAuth
      - value:
          - "{{ vars_webmethods_apigateway_usermgt_users_sample3_username }}"
        name: Username
        key: httpBasicAuth
    consumingAPIs: []
    isSuspended: false
    jsOrigins: []
    authStrategyIds: []
    restrictViewAsset: false
    teams: []

# APIs to publish
# each list item will publish a list of APIs to a list of communities using the same portalGatewayId
vars_webmethods_apigateway_apis_publish_groups:
  - lookup_portalGatewayId:
      name: "API_Gateway_{{ vars_apigateway_environment_stage }}"
      version: "1.0"
      stageName: "{{ vars_apigateway_environment_stage }}"
    lookup_communityIds:
      - name: "Public Community"
    lookup_apiIds:
      - name: "bookstore"
        version: "1.0"
      - name: "uszip"
        version: "1.0"
      - name: "covid"
        version: "1.0"
      - name: "SAGTours"
        version: "1.0"

# API Packages to publish
# each list item will publish a list of Packages to a list of communities using the same portalGatewayId
vars_webmethods_apigateway_packages_publish_groups:
  - lookup_portalGatewayId:
      name: "API_Gateway_{{ vars_apigateway_environment_stage }}"
      version: "1.0"
      stageName: "{{ vars_apigateway_environment_stage }}"
    lookup_communityIds:
      - name: "Public Community"
    lookup_packageIds:
      - name: Swag Pack Complete
        version: "1.0"
      - name: Swag Pack Bookstore
        version: "1.0"
      - name: Swag Pack UsZip
        version: "1.0"
      - name: Swag Pack CovidReports
        version: "1.0"