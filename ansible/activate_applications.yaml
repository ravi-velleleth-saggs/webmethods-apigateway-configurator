---

################################################################
## Load the needed vars
################################################################

- name: Load vars
  hosts: local
  tasks:
    - name: Include all vars files
      include_vars:
        file: "{{ item }}"
      with_fileglob:
        - vars/common.yaml
        - vars/rest_connect.yaml
        - vars/data_applications.yaml

################################################################
## set configs via REST APIs
################################################################

- hosts: local
  become: true
  become_user: "{{ webmethods_user }}"
  run_once: true
  vars:
    apigateway_rest_protocol: "{{ vars_apigw_rest_protocol }}"
    apigateway_rest_host: "{{ vars_apigw_rest_host }}"
    apigateway_rest_port: "{{ vars_apigw_rest_port }}"
    apigateway_rest_no_check_certs: "{{ vars_apigw_rest_no_check_certs }}"
    apigateway_rest_login_username: "{{ vars_apigw_rest_login_username }}"
    apigateway_rest_login_password: "{{ vars_apigw_rest_login_password }}"

  tasks:

    - ansible.builtin.debug:
        var: _apigw_applications_indices_finder_regex_pattern

    - name: get the count of items from the env vars
      set_fact:
        _index_items: "{{ ansible_env.keys() | map('regex_search',_regex_pattern, '\\1') | flatten | select('string') | unique | sort }}"
      vars:
        _regex_pattern: "{{ _apigw_applications_indices_finder_regex_pattern }}"

    - ansible.builtin.debug:
        var: _index_items
    
    - name: set initial list so it's not undefined
      set_fact:
         _applications_list: []

    - name: append each item template to list
      set_fact:
        _applications_list: "{{ _applications_list + [ _apigw_applications_activate_template ] }}"
      loop: "{{ _index_items }}"
      loop_control:
        loop_var: index_item

    - ansible.builtin.debug:
        var: _applications_list

    - name: activate/deactivate applications
      include_role:
        name: apigateway-rest-configurator
      vars:
        configs_action: set-applications
        configs_enabled: "{{ vars_apigw_applications_status_update_enabled }}"
        rvar_apigateway_applications: "{{ _applications_list }}"
